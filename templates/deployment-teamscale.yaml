kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.name | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ .Values.name | quote }}
    app.kubernetes.io/component: {{ .Values.name | quote }}
    app.kubernetes.io/instance: {{ .Values.name | quote }}
    app.kubernetes.io/part-of: teamscale-app
    app.openshift.io/runtime-namespace: {{ .Release.Namespace | quote }}
spec:
  strategy:
    type: Recreate
  triggers:
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - {{ .Values.name | quote }}
      from:
        kind: ImageStreamTag
        name: {{ print .Values.image ":" .Values.image_version | quote }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name | quote }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.name | quote }}
        deploymentconfig: {{ .Values.name | quote }}
        networking/ingress-allow-router: 'true'
    spec:
      volumes:
        - name: {{ tpl .Values.volumes.config . | quote }}
          configMap:
            name: {{ tpl .Values.volumes.config . | quote }}
            defaultMode: 420
        - name: {{ tpl .Values.volumes.storage . | quote }}
          persistentVolumeClaim:
            claimName: {{ tpl .Values.volumes.storage . | quote }}
        - name: {{ tpl .Values.volumes.data . | quote }}
          persistentVolumeClaim:
            claimName: {{ tpl .Values.volumes.data . | quote }}
      containers:
        - name: {{ .Values.name | quote }}
          image: {{ print .Values.image ":" .Values.image_version | quote }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health-check
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /health-check
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - name: {{ tpl .Values.volumes.config . | quote }}
              mountPath: /opt/teamscale/config
            - name: {{ tpl .Values.volumes.storage . | quote }}
              mountPath: /opt/teamscale/storage
            - name: {{ tpl .Values.volumes.data . | quote }}
              mountPath: /opt/teamscale/workspace
              subPath: workspace
            - name: {{ tpl .Values.volumes.data . | quote }}
              mountPath: /opt/teamscale/backup
              subPath: backup
            - name: {{ tpl .Values.volumes.data . | quote }}
              mountPath: /opt/teamscale/logs
              subPath: logs
          resources:
            limits:
              memory: {{ print .Values.heap_limit_gb "Gi" | quote }}